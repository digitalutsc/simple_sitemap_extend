<?php

/**
 * @file
 * Contains simple_sitemap_extend.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\NodeInterface;
use Drupal\Core\Entity\EntityTypeManagerInterface;
use Drupal\node\Entity\Node;
use Drupal\simple_sitemap\Simplesitemap;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * Implements hook_help().
 */
function simple_sitemap_extend_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.simple_sitemap_extend':
      return '<p>' . \Drupal::service('renderer')->renderRootInline('This module extends the functionality of the Simple Sitemap module.') . '</p>';
    // Add more cases for additional help sections if needed.
  }
}

/**
 * Implements hook_simple_sitemap_links_alter().
 *
 * Alters the sitemap links to exclude nodes with "page" in their "entity_model" field.
 */
function simple_sitemap_extend_simple_sitemap_links_alter(&$links, $sitemap) {
  /** @var EntityTypeManagerInterface $entityTypeManager */
  $entityTypeManager = \Drupal::service('entity_type.manager');

  foreach ($links as $index => $link) {
    $path = $link['meta']['path'];
    $res = \Drupal::service('path_alias.manager')->getPathByAlias($path);

    if (preg_match('/node\/(\d+)/', $res, $matches)) {
        $node = Drupal\node\Entity\Node::load($matches[1]);
    }

    if (isset($node) && $node instanceof Node && $node->hasField('field_model') && $node->get('field_model')->getValue()[0]["target_id"] === "15") {
        unset($links[$index]);
        //\Drupal::logger('my_module')->notice(implode(", ", array_keys($node->get('field_model')->getValue()[0]["target_id"])));
    }
  }
}


